alias o="open"
alias m="mosh"
alias ka="killall -9"
alias psg='ps aux | grep'
alias ag="ag --ignore *-min.* --ignore test --ignore tests"
alias netg='netstat -an | grep'
alias routes='netstat -nr'
alias ll="ls -laHh"
alias lag="ls -la | grep"
alias grep="grep -i"
alias g="grep -i"
alias fgrep="fgrep -i"
alias fg="fgrep -i"
alias top="htop"
alias c='ssh -l app '
alias sci="ssh-copy-id"
alias ka='killall'
alias wcl="wc -l"
alias route="sudo route"
alias su="sudo su"
alias p="ping -c 10"
alias xs='cd `pwd -P`' # exit symbolic path
alias path="echo $PATH |tr -s ':' '\n'"
alias pwdp='pwd -P'
#List top ten largest files/directories in current directory 
alias ducks='du -cks *|sort -rn|head -11'
alias sshcfg="vim ~/.ssh/config"
alias vikh="vim ~/.ssh/known_hosts"
alias v="vim"
alias -g L="|less" # Write L after a command to page through the output.
alias -g TL='| tail -10'
alias -g NUL="> /dev/null 2>&1" # You get the idea.
alias -s html=vim
alias type="nocorrect type"
alias svn="nocorrect svn"
alias rm="/usr/local/bin/safe-rm"
alias rmrf="rm -rf"
alias axel="axel -a"
alias brew="https_proxy=http://127.0.0.1:2080 http_proxy=http://127.0.0.1:2080 all_proxy=socks5://127.0.0.1:6153 brew"
alias bup=" brew update && brew upgrade"
alias nginx="sudo nginx"
alias ravz="rsync -avz --progress"
#alias flushdns="sudo discoveryutil mdnsflushcache && sudo discoveryutil udnsflushcaches && echo 'DNS cache flushed.'"
alias flushdns="sudo killall -HUP mDNSResponder && echo 'DNS cache flushed.'"
alias tcc="tmux -CC"
alias a="tmux -CC attach"


#alias ssh-copy-id="ssh-copy-id -o ControlPath=none" 




# git
alias gitcfg="vim ~/.gitconfig"
alias gca="git commit -a"
alias gl="git log --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit"
alias gd="git diff -w --minimal"
alias gdc="git diff -w --minimal --cached"
alias gdcw="git diff -w --color-words"
alias ga="git add"
alias gap="git add -p"
alias gbd="git branch -D"
alias gst="git status"
alias gm="git merge --no-ff"
alias gpt="git push --tags"
alias gp="git push"
alias grh="git reset --hard"
alias gb="git branch"
alias gcob="git checkout -b"
alias gco="git checkout"
alias gba="git branch -a"
alias gcp="git cherry-pick"
alias gpom="git pull origin master"
alias gcd='cd "`git rev-parse --show-toplevel`"'
alias grp='git rev-parse'
alias glp="git log -p"
alias gs="git svn"
alias gh="git help"
alias ta="tig --all"
alias gits="git show"
alias nd="node-debug"
alias dm="docker-machine"

function swap()
{
    local TMPFILE=tmp.$$
    mv "$1" $TMPFILE
    mv "$2" "$1"
    mv $TMPFILE "$2"
    echo "File names swapped."
}

function gitinfo () {
#!/bin/bash

pushd . >/dev/null

# Find base of git directory
while [ ! -d .git ] && [ ! `pwd` = "/" ]; do cd ..; done

# Show various information about this git directory
if [ -d .git ]; then
    echo "== Remote URL: `git remote -v`"

        echo "== Remote Branches: "
        git branch -r
        echo

        echo "== Local Branches:"
        git branch
        echo

        echo "== Configuration (.git/config)"
        cat .git/config
        echo

        echo "== Most Recent Commit"
        git log --max-count=1
        echo

        echo "Type 'git log' for more commits, or 'git show' for full commit details."
else
    echo "Not a git repository."
        fi

        popd >/dev/null
}



# dir travel
# get rid of command not found
alias cd..='cd ..'
alias ..='cd ..'
alias ...='cd ../../'
alias ....='cd ../../../'
alias .4='cd ../../../../'
alias .5='cd ../../../../../'
alias .6='cd ../../../../../../'
alias .7='cd ../../../../../../../'
alias .8='cd ../../../../../../../../'

# Inspect network activities
function spy () {
    lsof -i -P +c 0 +M | grep -i "$1"
}

function manp ()  {
    man $1 -t | open -f -a Preview
}


# Quicker way to edit hosts
function vih () {
    [ -f /etc/hosts.ac ] && sudo rm /etc/hosts.ac;
    sudo vim /etc/hosts;
    [ -f /etc/hosts.ac ] && sudo rm /etc/hosts.ac;
}


# Quick way to edit & apply aliases
function via () {
    vim ~/.alias && source ~/.alias
    echo "~/.alias applied"
}


# Quick way to edit .gitignore
function vigi () {
    vim .gitignore
}


function mcd () {
  mkdir -vp "$1" && cd "$1";
}


# List files by a specified extension
function lsext () {
    find . -type f -iname '*.'${1}'' -exec ls -l {} \; ;
}

# who uses port
function wup (){
    lsof -i tcp:$1
}

function hsrv (){
nohup ruby -run -e httpd . -p $1 > /dev/null 2>&1 &
}

function cpkey () {
  pbcopy < $HOME/.ssh/id_rsa.pub;
  echo "Your public key ~/.ssh/id_rsa.pub is now in the clipboard."
}


alias fuck='sudo $(history -p \!\!)'


function pon (){
    export https_proxy=http://127.0.0.1:2080
    export http_proxy=http://127.0.0.1:2080
    export all_proxy=socks5://127.0.0.1:6153
    echo "terminal proxy on"
}

function poff (){
    unset http_proxy
    unset https_proxy
    unset all_proxy
    echo "terminal proxy off"
}


function pn () {
    ping 10.0.0.$1
}




alias cmcx="cmc -X"



function chs() {
    defaults write $(mdls -name kMDItemCFBundleIdentifier -raw /Applications/"$1".app) AppleLanguages "(zh-Hans, zh_CN, zh, en)"
}


alias kctl=kubectl


function sniff (){
	nc -z  $1 $2
	local _status=$?
	if [ $_status = 0 ]; then 
		echo "Port $2 is open."
	else 
		echo "Connection to port $2 is refused."
	fi
}

alias vim=nvim

alias dokcer="docker"

alias pubkey="pbcopy < $HOME/.ssh/id_rsa.pub; echo Public key is copied."

